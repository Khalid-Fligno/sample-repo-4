// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Image Modal renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "opacity": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "borderRadius": 4,
          "flexShrink": 1,
          "justifyContent": "space-between",
          "overflow": "hidden",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "rgb(188, 188, 189)",
            "width": "100%",
          }
        }
      >
        <RCTScrollView
          bounces={false}
          bouncesZoom={false}
          maximumZoomScale={2}
          minimumZoomScale={1}
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Object {
                    "height": 957.6,
                    "width": 720,
                  },
                ]
              }
            >
              <FastImageView
                resizeMode="cover"
                source={
                  Object {
                    "uri": "test",
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
          </View>
        </RCTScrollView>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgb(38, 38, 40)",
              "height": 50,
              "justifyContent": "center",
              "opacity": 1,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "rgb(255, 255, 255)",
                "fontFamily": "GothamBold",
                "fontSize": 14,
                "marginTop": 3,
              }
            }
          >
            DONE
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
